# https://www.acmicpc.net/problem/1463

import sys

num = int(sys.stdin.readline())

# num에 해당하는 index에 맞게 공간 마련
d = [0] * (num + 1) # num + 1 를 해준 이유는 index와 num의 숫자를 맞춰주기 위해서이다. 1을 넣으면 d=[0,0] 이 되기 때문이다. d[1] = 0 보장

for i in range(2, num +1):
    # d[0] = 0 은 의미 없는 수이다. 다만 자리를 채우기 위한 숫자에 불과
    # d[1] = 0 은 1을 만드는데 필요한 연산 횟수이다. 1을 만드는데 필요한 연산 횟수는 0이다.
    # 1을 빼는 연산을 먼저 수행한다. num 아래의 숫자들 모두 순회하면서 필요 연산횟수를 계산하여 기록하는 메모이제이션 방법을 활용
    # num을 구하기 전까지 각각의 숫자에 대해서 3 혹은 2로 나누어지지 않으면 1을 빼는 필수이며, 3 혹은 2로 나누어지면 1를 빼는 연산의 횟수는 새롭게 교체된다.
    d[i] = d[i - 1] + 1
    if i % 3 == 0:
        # 3으로 나누어 떨어지는 경우는 3으로 나누어 떨어지는 숫자를 연산하기 위한 횟수에서 1만 더해주면 된다. 대신 1을 빼는 연산이랑 비교해서 더 작은 값을 넣어준다.
        # 혹은 추후에 2로 나누어 떨어지는 경우에도 2로 나누어 떨어지는 숫자를 연산하기 위한 횟수에서 1만 더해주면 된다. 대신 앞전에 저장했던 연산 횟수랑 비교해서 더 작은 값을 할당
        d[i] = min(d[i], d[i // 3] + 1)
    if i % 2 == 0:
        d[i] = min(d[i], d[i // 2] + 1)

print(d[num])

